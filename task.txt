###########################
# Опис завдання:
# СПробужмо розробити просту програму для обілку складу у магазині.
# У завданні будемо детальніше розбирати можливості роботи класами, тому всі товари формуємо по принципах ООП (почитай за це додатково).
#
# Технічне завдання:
# На основі вхідних даних про наявність різних товарів у магазині
# Програма буде складатись з 2 файлів: один включатиме опис товарів, а інший - власне процес взаємодії з користувачем.
# 1) Товари.
# 	Кожен товар за своєю суттю є об'єктом. У магазині зустрічаються товари мінімум 5 типів - овочі, фрукти, консерви, солодощі, хліб (за бажанням, можеш додати ще пару інших типів).
# 	Далі кожен товар має власне свою специфікацію - нпариклад, овочі - це яблуко, груша, слива тощо.
# 	Всі вони мають мати тип, ціну, дату придатності та унікальний номер (штрихкод - робиш просто як рандомну стрічку з 8 восьми символів). Всі ніші атрибути можуть відрізнятися.
# 	Також має бути власне метод, чи переверія, чи строк придатності ще не вийшов.
# 	Зверни увагу, що програма має правильно обирати, який об'єкт створити за типом тоівару.
# 2) Взаємодія з користувачем.
# 	У цьому файлі прописуємо тільки параметри взаємодії з користувачем. Він має мати змогу занести якиїсь товар до системи (відповідно ініалізувтаи об'єкт з якимось параметрами).
# 	Користувач має мати змогу додати будь яку клькітсь товарів за один сеанс.
# Використати тільки python та вбудовані бібліотеки.
# Вхідні параметри - за потребою клієнта

Етап 2.
З підключенням до бази даних зберігати всі введені користувачем айтеми у базі. 
Струкутра таблиці повинна відповідати атрибутам відповідного класу, а саме збереження релазуовуватись лише на останньому етапі, коли система відповідно буде мати весь список необхідного для зберігання.
Зв'язок з базою для синхронізації клас/таблиця варто реалізувати на класі кожного item.
Важливо, щоб система також пееревіряла наявність підключення, а також за потреби створювала всі необіхдін для збереження таблиці 
Частину з'єдання з базою можна вивести у окремий файл, і реалузвати за домогою engine у бібліотеці SQLAlchemy.
